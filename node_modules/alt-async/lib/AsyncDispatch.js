'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getActionCreators = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _createActions = require('create-actions');

var _send2 = require('./send');

var _send3 = _interopRequireDefault(_send2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// get the action creators that will be created given a namespace
var getActionCreators = exports.getActionCreators = function getActionCreators(namespace) {
  return (0, _createActions.generateActions)(namespace, ['begin', 'success', 'failure', 'end']);
};

var AyncDispatch = function () {
  function AyncDispatch(dispatcher, namespace) {
    var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    _classCallCheck(this, AyncDispatch);

    this.dispatcher = dispatcher;
    this.namespace = namespace;
    this.opts = opts;

    this.actions = _extends({}, getActionCreators(this.namespace), this.opts);

    this.store = { pending: {}, requests: {} };
  }

  _createClass(AyncDispatch, [{
    key: 'send',
    value: function () {
      function send(id, exec) {
        return (0, _send3['default'])(this)(id, exec);
      }

      return send;
    }()
  }]);

  return AyncDispatch;
}();

exports['default'] = AyncDispatch;