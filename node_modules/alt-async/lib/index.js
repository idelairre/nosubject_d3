'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncDispatch = exports.getActionCreators = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createActions = require('create-actions');

var _AsyncDispatch = require('./AsyncDispatch');

var _AsyncDispatch2 = _interopRequireDefault(_AsyncDispatch);

var _send = require('./send');

var _send2 = _interopRequireDefault(_send);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// get the action creators that will be created given a namespace
var getActionCreators = exports.getActionCreators = function getActionCreators(namespace) {
  return (0, _createActions.generateActions)(namespace, ['begin', 'success', 'failure', 'end']);
};

exports.AsyncDispatch = _AsyncDispatch2['default'];

// Creates a function that when called with a dispatcher will
// create all the necessary actions for you and dispatch them in the correct
// order. Basic caching is also provided by the utility

var createAsyncDispatch = function createAsyncDispatch(dispatcher) {
  return function (namespace, fn) {
    var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    var actions = _extends({}, getActionCreators(namespace), opts);

    var store = { pending: {}, requests: {} };

    var forSend = (0, _send2['default'])({
      actions: actions,
      dispatcher: dispatcher,
      store: store,
      opts: opts
    });

    return function () {
      return fn(forSend).apply(undefined, arguments);
    };
  };
};

exports['default'] = createAsyncDispatch;