{
  "_args": [
    [
      "gelf-stream@https://registry.npmjs.org/gelf-stream/-/gelf-stream-0.2.4.tgz",
      "/home/ian/nosubject_d3/node_modules/parsoid"
    ]
  ],
  "_from": "https://registry.npmjs.org/gelf-stream/-/gelf-stream-0.2.4.tgz",
  "_id": "gelf-stream@0.2.4",
  "_inCache": true,
  "_location": "/parsoid/gelf-stream",
  "_phantomChildren": {},
  "_requested": {
    "name": "gelf-stream",
    "raw": "gelf-stream@https://registry.npmjs.org/gelf-stream/-/gelf-stream-0.2.4.tgz",
    "rawSpec": "https://registry.npmjs.org/gelf-stream/-/gelf-stream-0.2.4.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/gelf-stream/-/gelf-stream-0.2.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/parsoid"
  ],
  "_resolved": "https://registry.npmjs.org/gelf-stream/-/gelf-stream-0.2.4.tgz",
  "_shasum": "a418c8c2e39b85b7932a3e8523f6022d6852e013",
  "_shrinkwrap": null,
  "_spec": "gelf-stream@https://registry.npmjs.org/gelf-stream/-/gelf-stream-0.2.4.tgz",
  "_where": "/home/ian/nosubject_d3/node_modules/parsoid",
  "author": {
    "email": "michael.hart.au@gmail.com",
    "name": "Michael Hart",
    "url": "http://github.com/mhart"
  },
  "bugs": {
    "url": "https://github.com/mhart/gelf-stream/issues"
  },
  "dependencies": {
    "gelfling": "~0.2.0"
  },
  "description": "A stream to send JS objects to a Graylog2 server (in GELF format)",
  "devDependencies": {
    "mocha": "~1.7.4",
    "should": "~1.2.1"
  },
  "homepage": "https://github.com/mhart/gelf-stream#readme",
  "keywords": [
    "gelf",
    "stream",
    "graylog",
    "graylog2",
    "bunyan"
  ],
  "license": "MIT",
  "main": "gelf-stream.js",
  "name": "gelf-stream",
  "optionalDependencies": {},
  "readme": "gelf-stream\n-----------\n\n[![Build Status](https://secure.travis-ci.org/mhart/gelf-stream.png?branch=master)](http://travis-ci.org/mhart/gelf-stream)\n\nA node.js stream to send JS objects to a\n[Graylog2](http://graylog2.org/) server (in\n[GELF](http://www.graylog2.org/about/gelf) format).\n\nAlso provides a stream that can be used directly in\n[Bunyan](https://github.com/trentm/node-bunyan) and provides\na number of sane mappings.\n\nExample\n-------\n\n```javascript\nvar split = require('split'),\n    bunyan = require('bunyan'),\n    gelfStream = require('gelf-stream')\n\n// gelf-stream comes with Bunyan support\n\nvar stream = gelfStream.forBunyan('localhost')\n\nvar log = bunyan.createLogger({name: 'foo', streams: [{type: 'raw', stream: stream}]})\n\nlog.info('Testing Bunyan') // will be sent to the Graylog2 server on localhost\n\nlog.error(new Error('Oh noes!')) // will extract file/line numbers too\n\nstream.end() // Bunyan doesn't currently end the stream when the program has finished\n\n// Or you can use it to stream any sort of object/string\n\nprocess.stdin\n  .pipe(split()) // split into lines\n  .pipe(gelfStream.create('localhost', {defaults: {level: 6}}))\n\nprocess.stdin.resume()\n```\n\nAPI\n---\n\n### gelfStream.create([host], [port], [options])\n\n### gelfStream.forBunyan([host], [port], [options])\n\n\nInstallation\n------------\n\nWith [npm](http://npmjs.org/) do:\n\n```\nnpm install gelf-stream\n```\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mhart/gelf-stream.git"
  },
  "scripts": {
    "test": "mocha ./test/fast.js -b -t 100s -R list"
  },
  "version": "0.2.4"
}
